{"version":3,"file":"static/js/248.b56212d2.chunk.js","mappings":"oLAAaA,EAAQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAO,gBAAKC,MAAO,CAAEC,MAAO,MAAOC,SAAU,IAAtC,SAA6CH,GACrD,C,wKCCYI,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mRAaVE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2KASLI,EAAQJ,EAAAA,EAAAA,MAAH,qFAMLK,EAASL,EAAAA,EAAAA,OAAH,wQ,yKC5BNM,EAAkBN,EAAAA,EAAAA,IAAH,4JACFO,GAMbC,EAAgBR,EAAAA,EAAAA,IAAH,qEAIbS,EAAWT,EAAAA,EAAAA,GAAH,qIAQRU,EAAeV,EAAAA,EAAAA,OAAH,yN,wKCZnBW,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,WACxCC,MAAOL,EAAAA,KAAaK,MAAM,iBAAiBD,WAC3CE,SAAUN,EAAAA,KAEPG,IAAI,EAAG,iCACPI,IAAI,GAAI,aACRH,aAGQI,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,iCACE,SAAC,KAAD,CACEC,cAAe,CAAET,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDM,iBAAkBb,EAClBc,SAbW,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1BN,GAASO,EAAAA,EAAAA,IAASF,IACfG,SACAC,MAAK,kBAAMC,EAAAA,GAAAA,QAAc,4BAApB,IACLC,OAAM,kBAAMD,EAAAA,GAAAA,MAAY,oCAAlB,IACTJ,GACD,EAIG,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,WAAO,QAEL,SAAC,KAAD,CAAOM,KAAK,OAAOnB,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAOoB,UAAWxC,EAAAA,QAEvC,UAAC,KAAD,WAAO,SAEL,SAAC,KAAD,CAAOuC,KAAK,OAAOnB,KAAK,WACxB,SAAC,KAAD,CAAcA,KAAK,QAAQoB,UAAWxC,EAAAA,QAExC,UAAC,KAAD,WAAO,YAEL,SAAC,KAAD,CAAOuC,KAAK,WAAWnB,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,WAAWoB,UAAWxC,EAAAA,QAE3C,SAAC,KAAD,CAAQuC,KAAK,SAAb,SAAsB,mBAG1B,SAAC,KAAD,CACEE,SAAS,YACTC,UAAW,KACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,WAIb,E,oBC1CD,EApBqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,2BACE,SAAC,KAAD,WACE,8BACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAU,kBACV,SAAC1B,EAAD,KACA,SAAC,KAAD,CAAca,KAAK,SAASc,QAAS,kBAAMF,EAAS,SAAf,EAArC,SAA+D,uDAQ1E,C","sources":["components/Error.jsx","components/RegistartionForm/RegistrationForm.styled.jsx","pages/Registration/Registartion.styled.jsx","components/RegistartionForm/RegistartionForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["export const Error = ({ children }) => {\n  return <div style={{ color: 'red', fontSize: 16 }}>{children}</div>;\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  max-height: 350px;\n  border: 3px dashed white;\n  border-radius: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  margin-bottom: 10px;\n`;\nexport const Input = styled(Field)`\n  width: 230px;\n  height: 18px;\n  margin-bottom: 20px;\n  margin-top: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 10px;\n`;\nexport const Label = styled.label`\n  color: white;\n  font-size: larger;\n  display: contents;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  background-color: transparent;\n  border-color: white;\n  color: white;\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  cursor: pointer;\n`;\n","import styled from '@emotion/styled';\nimport bg from '../../images/bg.jpg';\n\nexport const BackGroundImage = styled.div`\n  background-image: url(${bg});\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100vh;\n  padding: 100px 15px;\n`;\nexport const StyledSection = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const StyledH2 = styled.h2`\n  color: white;\n  font-size: xx-large;\n  font-weight: 400;\n  margin-bottom: 50px;\n  text-align: center;\n`;\n\nexport const StyledButton = styled.button`\n  background: none;\n  border: none;\n  color: white;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: pointer;\n  &:hover {\n    border-bottom: 1px solid white;\n  }\n`;\n","import React from 'react';\nimport { FormStyled, Input, Button, Label } from './RegistrationForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Error } from 'components/Error';\nimport { register } from 'redux/userAuthSlice/operations';\n\nconst scheme = yup.object().shape({\n  name: yup.string().min(3, 'Too Short!').required(),\n  email: yup.string().email('Invalid email').required(),\n  password: yup\n    .string()\n    .min(7, 'Too Short! Minimum 7 symbols.')\n    .max(16, 'Too Long!')\n    .required(),\n});\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(register(values))\n      .unwrap()\n      .then(() => toast.success('Registration successfully'))\n      .catch(() => toast.error('Something went wrong...Try again.'));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={scheme}\n        onSubmit={onSubmit}\n      >\n        <FormStyled>\n          <Label>\n            Name\n            <Input type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component={Error} />\n          </Label>\n          <Label>\n            Email\n            <Input type=\"text\" name=\"email\" />\n            <ErrorMessage name=\"email\" component={Error} />\n          </Label>\n          <Label>\n            Password\n            <Input type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component={Error} />\n          </Label>\n          <Button type=\"submit\">Register</Button>\n        </FormStyled>\n      </Formik>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n    </>\n  );\n};\n","import { RegistrationForm } from 'components/RegistartionForm/RegistartionForm';\nimport {\n  BackGroundImage,\n  StyledH2,\n  StyledSection,\n  StyledButton,\n} from './Registartion.styled';\nimport { useNavigate } from 'react-router-dom';\n\nconst Registartion = () => {\n  const navigate = useNavigate();\n\n  return (\n    <main>\n      <BackGroundImage>\n        <section>\n          <StyledSection>\n            <StyledH2>Registration</StyledH2>\n            <RegistrationForm />\n            <StyledButton type=\"button\" onClick={() => navigate('/login')}>\n              Do you have your own account? Try to enter\n            </StyledButton>\n          </StyledSection>\n        </section>\n      </BackGroundImage>\n    </main>\n  );\n};\n\nexport default Registartion;\n"],"names":["Error","children","style","color","fontSize","FormStyled","styled","Form","Input","Field","Label","Button","BackGroundImage","bg","StyledSection","StyledH2","StyledButton","scheme","yup","shape","name","min","required","email","password","max","RegistrationForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","register","unwrap","then","toast","catch","type","component","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","navigate","useNavigate","onClick"],"sourceRoot":""}