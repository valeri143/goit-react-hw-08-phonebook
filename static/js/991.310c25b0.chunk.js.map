{"version":3,"file":"static/js/991.310c25b0.chunk.js","mappings":"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","sources":["components/Error.jsx","components/ContactList/ContactList-styled.jsx","redux/contactListSlice/selectors.jsx","components/ContactList/ContactList.jsx","components/Form/FormStyled.jsx","components/Form/Form.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const Error = ({ children }) => {\n  return <div style={{ color: 'red', fontSize: 16 }}>{children}</div>;\n};\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-left: 50px;\n  @media (max-width: 530px) {\n    margin-left: 20px;\n  }\n`;\nexport const Text = styled.p`\n  font-size: large;\n  font-weight: 500;\n  color: white;\n`;\nexport const TextList = styled.ul`\n  font-size: large;\n  font-weight: 400;\n  color: white;\n`;\nexport const Button = styled.button`\n  background-color: white;\n  border-radius: 80%;\n  margin-left: 10px;\n  border: none;\n  padding: 5px;\n  width: 50px;\n  box-shadow: 0 2px 4px darkslategray;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  &:hover {\n    background-color: #941cd4;\n  }\n  &:active {\n    box-shadow: 0 0 2px darkslategray;\n    transform: translateY(2px);\n  }\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filteredContacts = contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()));\n        return filteredContacts\n  }\n);\n\n\n\n","import { Text, TextList, Button, Box } from './ContactList-styled';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectFilteredContacts,\n} from 'redux/contactListSlice/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { deleteContact } from 'redux/contactListSlice/operations';\nimport { useEffect, useState } from 'react';\nimport { fetchContacts } from 'redux/contactListSlice/operations';\nimport { RotatingLines, ThreeDots } from 'react-loader-spinner';\nimport { FaTrashAlt } from 'react-icons/fa';\n\nexport const ContactList = () => {\n  const [deletingContactId, setDeletingContactId] = useState(null);\n  const [onDeleting, setOnDeleting] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectFilteredContacts);\n\n  const handleDelete = id => {\n    setDeletingContactId(id);\n    setOnDeleting(true);\n    dispatch(deleteContact(id))\n      .then(() => {\n        setDeletingContactId(null);\n        setOnDeleting(false);\n      })\n      .catch(() => {\n        setDeletingContactId(null);\n        setOnDeleting(false);\n      });\n  };\n\n  return (\n    <Box>\n      <h2>Contacts</h2>\n      <Text>Find contacts by name</Text>\n      <input\n        onChange={e => dispatch(setFilter(e.target.value))}\n        type=\"text\"\n        name=\"filter\"\n      />\n      <TextList>\n        {isLoading && !error && !onDeleting && (\n          <ThreeDots\n            height=\"40\"\n            width=\"40\"\n            radius=\"9\"\n            color=\"white\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        )}\n        {contacts.map(contact => (\n          <li key={contact.id} style={{ marginBottom: 10 }}>\n            {contact.name} : {contact.number}\n            <Button onClick={() => handleDelete(contact.id)}>\n              {deletingContactId === contact.id ? (\n                <RotatingLines\n                  strokeColor=\"white\"\n                  strokeWidth=\"5\"\n                  animationDuration=\"0.75\"\n                  width=\"15\"\n                  visible={true}\n                />\n              ) : (\n                <FaTrashAlt />\n              )}\n            </Button>\n          </li>\n        ))}\n      </TextList>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Box = styled.div`\n  margin-left: 50px;\n  @media (max-width: 530px) {\n    margin-left: 20px;\n  }\n`;\nexport const Title = styled.h1`\n  font-size: xx-large;\n  color: white;\n`;\nexport const FormStyled = styled(Form)`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  @media (max-width: 530px) {\n    width: 250px;\n  }\n  max-height: 250px;\n  border: 3px solid white;\n`;\nexport const Input = styled(Field)`\n  width: 160px;\n  margin-bottom: 20px;\n`;\nexport const Label = styled.label`\n  color: white;\n  font-size: larger;\n  display: contents;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  background-color: transparent;\n  color: white;\n  border-color: gray;\n  border-radius: 5px;\n  margin-top: 10px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { Title, FormStyled, Input, Button, Label, Box } from './FormStyled';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contactListSlice/selectors';\nimport { addContact } from 'redux/contactListSlice/operations';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Error } from 'components/Error';\n\nconst scheme = yup.object().shape({\n  name: yup.string().required(\"Please enter the contact's name\"),\n  number: yup\n    .number()\n    .min(10, 'Must be more than 10 characters')\n    .required(\"Please enter the phone's number\"),\n});\n\nexport const Form = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n    const contact = {\n      name: name.trim(),\n      phone: number.trim(),\n    };\n    const existingContact = contacts.some(\n      ({ name }) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existingContact) {\n      toast.info('This contact already exists in the phonebook!');\n      return;\n    }\n    dispatch(addContact({ name: name.trim(), number: number.trim() }))\n      .unwrap()\n      .then(() => toast.success('Contact is successfully added'))\n      .catch(() => toast.error('Something went wrong...Try again.'));\n\n    resetForm();\n  };\n\n  return (\n    <Box>\n      <Title>Phonebook</Title>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={scheme}\n        onSubmit={onSubmit}\n      >\n        <FormStyled>\n          <Label>\n            Name\n            <Input type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component={Error} />\n          </Label>\n          <Label>\n            Number\n            <Input type=\"tel\" name=\"number\" />\n            <ErrorMessage name=\"number\" component={Error} />\n          </Label>\n          <Button type=\"submit\">Add Contact</Button>\n        </FormStyled>\n      </Formik>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\nimport bg from '../../images/bg.page.jpg';\n\nexport const BackGroundImage = styled.div`\n  background-image: url(${bg});\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100vh;\n  padding: 100px 15px;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  gap: 100px;\n  @media (max-width: 900px) {\n    display: block;\n  }\n`;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Form } from 'components/Form/Form';\nimport { BackGroundImage, StyledDiv } from './Contacts.styled';\n\nexport const Contacts = () => {\n  return (\n    <main>\n      <BackGroundImage>\n        <StyledDiv>\n          <section>\n            <Form />\n          </section>\n          <section>\n            <ContactList />\n          </section>\n        </StyledDiv>\n      </BackGroundImage>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["Error","children","style","color","fontSize","Box","styled","Text","TextList","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","ContactList","useState","deletingContactId","setDeletingContactId","onDeleting","setOnDeleting","dispatch","useDispatch","useSelector","useEffect","fetchContacts","onChange","e","setFilter","target","value","type","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","map","marginBottom","number","onClick","id","deleteContact","then","catch","strokeColor","strokeWidth","animationDuration","Title","FormStyled","Form","Input","Field","Label","scheme","yup","shape","required","min","initialValues","validationSchema","onSubmit","resetForm","trim","phone","existingContact","some","toast","addContact","unwrap","component","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","BackGroundImage","bg","StyledDiv","Contacts"],"sourceRoot":""}